# deployment/nginx.conf
# Nginx configuration for APT Classification System

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    
    # Security headers
    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml+rss;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=ui:10m rate=5r/s;
    
    # Upstream definitions
    upstream apt_api {
        server apt-classifier:8000;
        keepalive 32;
    }
    
    upstream apt_ui {
        server apt-interface:8501;
        keepalive 16;
    }
    
    upstream model_server {
        server model-server:80;
        keepalive 8;
    }
    
    # API Server
    server {
        listen 80;
        server_name api.localhost apt-api.local;
        
        # Rate limiting for API
        limit_req zone=api burst=20 nodelay;
        
        # API routes
        location /api/ {
            proxy_pass http://apt_api/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Timeouts based on thesis 43ms target
            proxy_connect_timeout 5s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # CORS headers for API
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS";
            add_header Access-Control-Allow-Headers "Authorization, Content-Type";
            
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }
        
        # Health check endpoint
        location /health {
            proxy_pass http://apt_api/health;
            proxy_set_header Host $host;
            access_log off;
        }
        
        # Metrics endpoint
        location /metrics {
            proxy_pass http://apt_api/metrics;
            proxy_set_header Host $host;
            # Restrict access to monitoring
            allow 172.16.0.0/12;
            deny all;
        }
    }
    
    # Web Interface
    server {
        listen 80 default_server;
        server_name localhost apt-ui.local;
        
        # Rate limiting for UI
        limit_req zone=ui burst=10 nodelay;
        
        location / {
            proxy_pass http://apt_ui;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Streamlit
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
            
            # Streamlit specific headers
            proxy_buffering off;
            proxy_cache off;
        }
        
        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
            proxy_pass http://apt_ui;
            proxy_set_header Host $host;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
    }
    
    # Model Server (as specified in thesis)
    server {
        listen 8080;
        server_name models.localhost;
        
        location /models/ {
            proxy_pass http://model_server/models/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            
            # Security for model downloads
            # allow 172.16.0.0/12;  # Uncomment to restrict access
            # deny all;
        }
        
        location /downloads/ {
            proxy_pass http://model_server/downloads/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }
        
        # Directory listing
        location = /models {
            return 301 /models/;
        }
        
        location = /downloads {
            return 301 /downloads/;
        }
    }
    
    # SSL redirect (for production)
    # server {
    #     listen 80;
    #     server_name yourdomain.com;
    #     return 301 https://$server_name$request_uri;
    # }
    
    # HTTPS configuration (for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name yourdomain.com;
    #     
    #     ssl_certificate /etc/ssl/certs/apt-classifier.crt;
    #     ssl_certificate_key /etc/ssl/private/apt-classifier.key;
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    #     ssl_prefer_server_ciphers off;
    #     
    #     # Same proxy configuration as HTTP version
    # }
}